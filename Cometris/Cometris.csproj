<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net8.0</TargetFrameworks>
        <LangVersion>preview</LangVersion>
        <Nullable>enable</Nullable>
        <AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>
        <PackageLicenseExpression>AGPL-3.0-only</PackageLicenseExpression>
        <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <Import Project="../Cometris.targets" />
    <ItemGroup>
        <PackageReference Include="Shamisen.Utils" Version="0.1.0-alpha.0.7.0" />
    </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\MikoMino\MikoMino\MikoMino.csproj" />
    </ItemGroup>
    
    <Target Name="DependUponMessageBeforeBuild" BeforeTargets="TextTemplateTransform">
        <ItemGroup>
            <ItemThatDependsUponSomethingBeforeBuild Include="@(Compile->HasMetadata('DependentUpon'))" UpToDateCheckInput="false"/>
            <DependsUponMessageBeforeBuildItem Include="@(ItemThatDependsUponSomethingBeforeBuild)" Text="%(Identity) depends upon %(DependentUpon)" UpToDateCheckInput="false"/>
            <DependsUponMessageWithExistenceBeforeBuild Include="@(DependsUponMessageBeforeBuildItem)" Condition="Exists('%(Identity)')" Text="%(Text) and it exists." UpToDateCheckInput="false"/>
            <DependsUponMessageWithExistenceBeforeBuild Include="@(DependsUponMessageBeforeBuildItem)" Condition="!Exists('%(Identity)')" Text="%(Text) but it doesn't exist." UpToDateCheckInput="false"/>
        </ItemGroup>
        <Message Text="%(DependsUponMessageWithExistenceBeforeBuild.Text)" />
    </Target>
    <Target Name="DependUponMessageAfterBuild" AfterTargets="Build">
        <ItemGroup>
            <ItemThatDependsUponSomethingAfterBuild Include="@(Compile->HasMetadata('DependentUpon'))" UpToDateCheckInput="false"/>
            <DependsUponMessageAfterBuildItem Include="@(ItemThatDependsUponSomethingAfterBuild)" Text="%(Identity) depends upon %(DependentUpon)" UpToDateCheckInput="false"/>
            <DependsUponMessageWithExistenceAfterBuild Include="@(DependsUponMessageAfterBuildItem)" Condition="Exists('%(Identity)')" Text="%(Text) and it exists." UpToDateCheckInput="false"/>
            <DependsUponMessageWithExistenceAfterBuild Include="@(DependsUponMessageAfterBuildItem)" Condition="!Exists('%(Identity)')" Text="%(Text) but it doesn't exist." UpToDateCheckInput="false"/>
        </ItemGroup>
        <Message Text="%(DependsUponMessageWithExistenceAfterBuild.Text)" />
    </Target>
    <Target Name="UpToDateCheckBuiltMessageBeforeBuild" AfterTargets="Build">
        <ItemGroup>
            <ItemThatChecksUpToDate Include="@(UpToDateCheckBuilt->HasMetadata('Original'))" UpToDateCheckInput="false"/>
            <UpToDateMessageItem Include="@(ItemThatChecksUpToDate)" Text="%(Identity) is generated from %(Original)" UpToDateCheckInput="false"/>
            <UpToDateMessageWithExistence Include="@(UpToDateMessageItem)" Condition="Exists('%(Identity)')" Text="%(Text) and it exists." UpToDateCheckInput="false"/>
            <UpToDateMessageWithExistence Include="@(UpToDateMessageItem)" Condition="!Exists('%(Identity)')" Text="%(Text) but it doesn't exist." UpToDateCheckInput="false"/>
        </ItemGroup>
        <Message Text="%(UpToDateMessageWithExistence.Text)" />
    </Target>
</Project>