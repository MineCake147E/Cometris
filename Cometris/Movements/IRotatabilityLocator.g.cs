// <auto-generated />
// Environment.Version: 8.0.0
using System;
using System.Numerics;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Cometris.Boards;

namespace Cometris.Movements
{
    public partial interface IRotatabilityLocator<TSelf, TBitBoard>
    {
        
        static abstract TBitBoard RotateClockwiseFromUp(TBitBoard rightMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateCounterClockwiseFromUp(TBitBoard leftMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateClockwiseFromRight(TBitBoard downMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateCounterClockwiseFromRight(TBitBoard upMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateClockwiseFromDown(TBitBoard leftMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateCounterClockwiseFromDown(TBitBoard rightMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateClockwiseFromLeft(TBitBoard upMobility, TBitBoard reached);
        
        static abstract TBitBoard RotateCounterClockwiseFromLeft(TBitBoard downMobility, TBitBoard reached);

        static virtual TBitBoard RotateToUp(TBitBoard upMobility, TBitBoard leftReached, TBitBoard rightReached)
            => TSelf.RotateClockwiseFromLeft(upMobility, leftReached) | TSelf.RotateCounterClockwiseFromRight(upMobility, rightReached);

        static virtual TBitBoard RotateToRight(TBitBoard rightMobility, TBitBoard upReached, TBitBoard downReached)
            => TSelf.RotateClockwiseFromUp(rightMobility, upReached) | TSelf.RotateCounterClockwiseFromDown(rightMobility, downReached);

        static virtual TBitBoard RotateToDown(TBitBoard downMobility, TBitBoard rightReached, TBitBoard leftReached)
            => TSelf.RotateClockwiseFromRight(downMobility, rightReached) | TSelf.RotateCounterClockwiseFromLeft(downMobility, leftReached);

        static virtual TBitBoard RotateToLeft(TBitBoard leftMobility, TBitBoard downReached, TBitBoard upReached)
            => TSelf.RotateClockwiseFromDown(leftMobility, downReached) | TSelf.RotateCounterClockwiseFromUp(leftMobility, upReached);
    }
}
