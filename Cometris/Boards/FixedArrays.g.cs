// <auto-generated />
// Environment.Version: 8.0.3
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Cometris.Boards
{
#pragma warning disable S1144 // Unused private types or members should be removed
#pragma warning disable IDE0044 // Add readonly modifier
#pragma warning disable IDE0051 // Remove unused private members
    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(4)]
    internal struct FixedArray4<T>
    {
        private T head;
        public const nuint Length = 4;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(8)]
    internal struct FixedArray8<T>
    {
        private T head;
        public const nuint Length = 8;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(9)]
    internal struct FixedArray9<T>
    {
        private T head;
        public const nuint Length = 9;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(16)]
    internal struct FixedArray16<T>
    {
        private T head;
        public const nuint Length = 16;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(17)]
    internal struct FixedArray17<T>
    {
        private T head;
        public const nuint Length = 17;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(24)]
    internal struct FixedArray24<T>
    {
        private T head;
        public const nuint Length = 24;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(32)]
    internal struct FixedArray32<T>
    {
        private T head;
        public const nuint Length = 32;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(33)]
    internal struct FixedArray33<T>
    {
        private T head;
        public const nuint Length = 33;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(34)]
    internal struct FixedArray34<T>
    {
        private T head;
        public const nuint Length = 34;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(40)]
    internal struct FixedArray40<T>
    {
        private T head;
        public const nuint Length = 40;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(64)]
    internal struct FixedArray64<T>
    {
        private T head;
        public const nuint Length = 64;
    }

    [StructLayout(LayoutKind.Sequential)]
    [InlineArray(80)]
    internal struct FixedArray80<T>
    {
        private T head;
        public const nuint Length = 80;
    }

#pragma warning restore IDE0051 // Remove unused private members
#pragma warning restore IDE0044 // Add readonly modifier
#pragma warning restore S1144 // Unused private types or members should be removed
}
